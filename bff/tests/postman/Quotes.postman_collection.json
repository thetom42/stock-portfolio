{
  "info": {
    "name": "Stock Portfolio BFF - Quotes",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Get Latest Quote",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function() {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Response has quote data', function() {",
              "    const response = pm.response.json();",
              "    pm.expect(response).to.have.property('price');",
              "    pm.expect(response).to.have.property('timestamp');",
              "    pm.expect(response.isin).to.eql('US0378331005');",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "GET",
        "url": {
          "raw": "{{baseUrl}}/quotes/stock/US0378331005/latest",
          "host": ["{{baseUrl}}"],
          "path": ["quotes", "stock", "US0378331005", "latest"]
        }
      }
    },
    {
      "name": "Get Quote History",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function() {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Response is an array of historical quotes', function() {",
              "    const response = pm.response.json();",
              "    pm.expect(response).to.be.an('array');",
              "    if (response.length > 0) {",
              "        pm.expect(response[0]).to.have.property('price');",
              "        pm.expect(response[0]).to.have.property('timestamp');",
              "        pm.expect(response[0]).to.have.property('isin');",
              "    }",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "GET",
        "url": {
          "raw": "{{baseUrl}}/quotes/stock/US0378331005/history",
          "host": ["{{baseUrl}}"],
          "path": ["quotes", "stock", "US0378331005", "history"]
        }
      }
    },
    {
      "name": "Get Intraday Quotes",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function() {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Response is an array of intraday quotes', function() {",
              "    const response = pm.response.json();",
              "    pm.expect(response).to.be.an('array');",
              "    if (response.length > 0) {",
              "        pm.expect(response[0]).to.have.property('price');",
              "        pm.expect(response[0]).to.have.property('timestamp');",
              "        pm.expect(response[0]).to.have.property('isin');",
              "    }",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "GET",
        "url": {
          "raw": "{{baseUrl}}/quotes/stock/US0378331005/intraday",
          "host": ["{{baseUrl}}"],
          "path": ["quotes", "stock", "US0378331005", "intraday"]
        }
      }
    },
    {
      "name": "Get Portfolio Quotes",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function() {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Response is an array of portfolio quotes', function() {",
              "    const response = pm.response.json();",
              "    pm.expect(response).to.be.an('array');",
              "    if (response.length > 0) {",
              "        pm.expect(response[0]).to.have.property('isin');",
              "        pm.expect(response[0]).to.have.property('price');",
              "        pm.expect(response[0]).to.have.property('timestamp');",
              "    }",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "GET",
        "url": {
          "raw": "{{baseUrl}}/quotes/portfolio/{{portfolioId}}/quotes",
          "host": ["{{baseUrl}}"],
          "path": ["quotes", "portfolio", "{{portfolioId}}", "quotes"]
        }
      }
    },
    {
      "name": "Get Holding Quotes",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function() {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Response is an array of holding quotes', function() {",
              "    const response = pm.response.json();",
              "    pm.expect(response).to.be.an('array');",
              "    if (response.length > 0) {",
              "        pm.expect(response[0]).to.have.property('isin');",
              "        pm.expect(response[0]).to.have.property('price');",
              "        pm.expect(response[0]).to.have.property('timestamp');",
              "    }",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "GET",
        "url": {
          "raw": "{{baseUrl}}/quotes/holding/{{holdingId}}/quotes",
          "host": ["{{baseUrl}}"],
          "path": ["quotes", "holding", "{{holdingId}}", "quotes"]
        }
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000/api"
    }
  ]
}
