{
  "info": {
    "name": "Stock Portfolio BFF - Portfolios",
    "description": "Collection for managing investment portfolios in the Stock Portfolio application.\n\nAuthentication:\nThis collection uses Keycloak for authentication. Portfolios are user-specific resources, requiring authentication to ensure users can only access and modify their own portfolios.\n\nRequired Environment Variables:\n- Regular User Authentication:\n  * username: Regular test user username\n  * password: Regular test user password\n  * accessToken: Regular user access token\n\nAdditional Variables:\n- portfolioId: ID of the portfolio being accessed\n\nThe collection includes operations for managing portfolios, including creation, updates, and retrieving various portfolio metrics (performance, allocation, etc.). All operations require authentication and verify resource ownership.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "exec": [
          "// Function to get token based on role",
          "const getToken = (isAdmin = false) => {",
          "    const username = isAdmin ? pm.environment.get('adminUsername') : pm.environment.get('username');",
          "    const password = isAdmin ? pm.environment.get('adminPassword') : pm.environment.get('password');",
          "    const tokenVar = isAdmin ? 'adminAccessToken' : 'accessToken';",
          "    const refreshTokenVar = isAdmin ? 'adminRefreshToken' : 'refreshToken';",
          "",
          "    const accessToken = pm.environment.get(tokenVar);",
          "    if (!accessToken) {",
          "        const keycloakUrl = pm.environment.get('keycloakUrl');",
          "        const realm = pm.environment.get('realm');",
          "        const tokenUrl = `${keycloakUrl}/realms/${realm}/protocol/openid-connect/token`;",
          "",
          "        const clientId = pm.environment.get('clientId');",
          "        const clientSecret = pm.environment.get('clientSecret');",
          "",
          "        pm.sendRequest({",
          "            url: tokenUrl,",
          "            method: 'POST',",
          "            header: {",
          "                'Content-Type': 'application/x-www-form-urlencoded'",
          "            },",
          "            body: {",
          "                mode: 'urlencoded',",
          "                urlencoded: [",
          "                    { key: 'grant_type', value: 'password' },",
          "                    { key: 'client_id', value: clientId },",
          "                    { key: 'client_secret', value: clientSecret },",
          "                    { key: 'username', value: username },",
          "                    { key: 'password', value: password }",
          "                ]",
          "            }",
          "        }, function (err, res) {",
          "            if (err) {",
          "                console.error(err);",
          "            } else {",
          "                const response = res.json();",
          "                pm.environment.set(tokenVar, response.access_token);",
          "                pm.environment.set(refreshTokenVar, response.refresh_token);",
          "            }",
          "        });",
          "    }",
          "};",
          "",
          "// Get regular user token since portfolios are user-specific",
          "getToken(false);"
        ],
        "type": "text/javascript"
      }
    }
  ],
  "item": [
    {
      "name": "Portfolio Management",
      "item": [
        {
          "name": "Create Portfolio",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 201', function() {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Response has correct portfolio data', function() {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('id');",
                  "    pm.expect(response.name).to.eql('Test Portfolio');",
                  "    pm.environment.set('portfolioId', response.id);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Test Portfolio\",\n    \"description\": \"Test Description\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/portfolios",
              "host": ["{{baseUrl}}"],
              "path": ["portfolios"]
            }
          }
        },
        {
          "name": "Get User Portfolios",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response is an array of portfolios', function() {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.be.an('array');",
                  "    if (response.length > 0) {",
                  "        pm.expect(response[0]).to.have.property('id');",
                  "        pm.expect(response[0]).to.have.property('name');",
                  "    }",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/portfolios",
              "host": ["{{baseUrl}}"],
              "path": ["portfolios"]
            }
          }
        },
        {
          "name": "Get Portfolio",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has correct portfolio data', function() {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.id).to.eql(pm.environment.get('portfolioId'));",
                  "    pm.expect(response).to.have.property('name');",
                  "    pm.expect(response).to.have.property('description');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/portfolios/{{portfolioId}}",
              "host": ["{{baseUrl}}"],
              "path": ["portfolios", "{{portfolioId}}"]
            }
          }
        },
        {
          "name": "Update Portfolio",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has updated portfolio data', function() {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.id).to.eql(pm.environment.get('portfolioId'));",
                  "    pm.expect(response.name).to.eql('Updated Portfolio');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Updated Portfolio\",\n    \"description\": \"Updated Description\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/portfolios/{{portfolioId}}",
              "host": ["{{baseUrl}}"],
              "path": ["portfolios", "{{portfolioId}}"]
            }
          }
        },
        {
          "name": "Delete Portfolio",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 204', function() {",
                  "    pm.response.to.have.status(204);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/portfolios/{{portfolioId}}",
              "host": ["{{baseUrl}}"],
              "path": ["portfolios", "{{portfolioId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "Portfolio Analysis",
      "item": [
        {
          "name": "Get Portfolio Summary",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has summary data', function() {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('totalValue');",
                  "    pm.expect(response).to.have.property('totalHoldings');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/portfolios/{{portfolioId}}/summary",
              "host": ["{{baseUrl}}"],
              "path": ["portfolios", "{{portfolioId}}", "summary"]
            }
          }
        },
        {
          "name": "Get Portfolio Performance",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has performance data', function() {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('totalReturn');",
                  "    pm.expect(response).to.have.property('returnPercentage');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/portfolios/{{portfolioId}}/performance",
              "host": ["{{baseUrl}}"],
              "path": ["portfolios", "{{portfolioId}}", "performance"]
            }
          }
        },
        {
          "name": "Get Portfolio Holdings",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response is an array of holdings', function() {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.be.an('array');",
                  "    if (response.length > 0) {",
                  "        pm.expect(response[0]).to.have.property('id');",
                  "        pm.expect(response[0]).to.have.property('quantity');",
                  "    }",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/portfolios/{{portfolioId}}/holdings",
              "host": ["{{baseUrl}}"],
              "path": ["portfolios", "{{portfolioId}}", "holdings"]
            }
          }
        },
        {
          "name": "Get Portfolio Allocation",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has allocation data', function() {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.be.an('array');",
                  "    if (response.length > 0) {",
                  "        pm.expect(response[0]).to.have.property('category');",
                  "        pm.expect(response[0]).to.have.property('percentage');",
                  "    }",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/portfolios/{{portfolioId}}/allocation",
              "host": ["{{baseUrl}}"],
              "path": ["portfolios", "{{portfolioId}}", "allocation"]
            }
          }
        },
        {
          "name": "Get Portfolio Returns",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has returns data', function() {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('totalReturn');",
                  "    pm.expect(response).to.have.property('annualizedReturn');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/portfolios/{{portfolioId}}/returns",
              "host": ["{{baseUrl}}"],
              "path": ["portfolios", "{{portfolioId}}", "returns"]
            }
          }
        },
        {
          "name": "Get Portfolio History",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has history data', function() {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.be.an('array');",
                  "    if (response.length > 0) {",
                  "        pm.expect(response[0]).to.have.property('date');",
                  "        pm.expect(response[0]).to.have.property('value');",
                  "    }",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/portfolios/{{portfolioId}}/history",
              "host": ["{{baseUrl}}"],
              "path": ["portfolios", "{{portfolioId}}", "history"]
            }
          }
        }
      ]
    },
    {
      "name": "Access Control Tests",
      "item": [
        {
          "name": "Get Other User's Portfolio (Should Fail)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 403', function() {",
                  "    pm.response.to.have.status(403);",
                  "});",
                  "",
                  "pm.test('Response has correct error message', function() {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.error).to.have.property('message');",
                  "    pm.expect(response.error.message).to.include('Forbidden');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/portfolios/other-user-portfolio-id",
              "host": ["{{baseUrl}}"],
              "path": ["portfolios", "other-user-portfolio-id"]
            }
          }
        },
        {
          "name": "Access Without Auth (Should Fail)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 401', function() {",
                  "    pm.response.to.have.status(401);",
                  "});",
                  "",
                  "pm.test('Response has correct error message', function() {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.error).to.have.property('message');",
                  "    pm.expect(response.error.message).to.include('Unauthorized');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/portfolios",
              "host": ["{{baseUrl}}"],
              "path": ["portfolios"]
            }
          }
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000/api"
    }
  ]
}
