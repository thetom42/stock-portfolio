services:
  postgres:
    image: postgres:14
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: stock_portfolio
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/sql/test-data.sql:/docker-entrypoint-initdb.d/test-data.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:21.1
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/stock_portfolio
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres
      KC_HEALTH_ENABLED: "true"
    command:
      - start-dev
      - --import-realm
    volumes:
      - ./keycloak/realm-export.json:/opt/keycloak/data/import/realm-export.json
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    #healthcheck:
    #  test: ["CMD", "curl", "-f", "http://localhost:8080/health/ready"]
    #  interval: 5s
    #  timeout: 5s
    #  retries: 10

  bff:
    build:
      context: .
      dockerfile: bff/Dockerfile
    ports:
      - "${BFF_PORT}:3000"
    env_file:
      - ./bff/.env.sample
    depends_on:
      postgres:
        condition: service_healthy
      keycloak:
        condition: service_started
        #condition: service_healthy
    volumes:
      # Mount files exactly where the imports expect them
      - ./bff/src:/app/src
      - ./db/models:/app/../../../db/models
      - ./db/repositories:/app/../../../db/repositories
      - ./db/prisma:/app/prisma

volumes:
  postgres_data:
